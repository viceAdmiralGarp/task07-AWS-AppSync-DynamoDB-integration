import { BedrockConverseRequest, BedrockInvokeModelRequest } from './resolver-return-types';
/**
 * Generates a BedrockInvokeModelRequest object to make an [InvokeModel](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_InvokeModel.html)
 * request to the Bedrock Runtime.
 * @param payload
 * @returns BedrockInvokeModelRequest
 * @example
 * ```typescript
 * import { invokeModel } from '@aws-appsync/utils/ai';
 * export function request(ctx) {
 *     return invokeModel({
 *         modelId: 'bedrock-model-id',
 *         body: {
 *             inputText: 'Describe the purpose of a "hello world" program in one line.',
 *             textGenerationConfig : {
 *                 maxTokenCount: 512,
 *                 temperature: 0.5,
 *                 topP: 0.9
 *             }
 *         }
 *    });
 * }
 * ```
 */
export declare function invokeModel(payload: InvokePayload): BedrockInvokeModelRequest;
/**
 * Generates a BedrockConverseRequest object to make an [Converse](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_runtime_Converse.html)
 * request to the Bedrock Runtime.
 * @param payload
 * @returns BedrockConverseRequest
 * @example
 * ```typescript
 * import { invokeModel } from '@aws-appsync/utils/ai';
 * export function request(ctx) {
 *     return converse({
 *         modelId: 'bedrock-model-id',
 *         messages: [{
 *             role: 'user',
 *             content: [
 *               {
 *                 text: 'Describe the purpose of a "hello world" program in one line.'
 *               }
 *             ]
 *         }]
 *     });
 * }
 * ```
 */
export declare function converse(payload: ConversePayload): BedrockConverseRequest;
export type InvokePayload = Omit<BedrockInvokeModelRequest, 'operation'>;
export type ConversePayload = Omit<BedrockConverseRequest, 'operation'>;
